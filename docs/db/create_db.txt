CREATE TABLE IF NOT EXISTS Supplier(
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	name TEXT NOT NULL,
	address TEXT NOT NULL,
	account_number TEXT NOT NULL,
	paymentInfo TEXT NOT NULL,
	inc_number INTEGER NOT NULL
);

--TODO supplay_day text or integer
CREATE TABLE IF NOT EXISTS supplay_days(
	supplay_day INTEGER NOT NULL,
	supplier_id INTEGER,
	
	PRIMARY KEY (supplier_id, supplay_day)
	FOREIGN KEY (supplier_id)
		REFERENCES Supplier(id)
	CONSTRAINT day_range CHECK (supplay_day > 0 AND supplay_day < 8)
);

CREATE TABLE IF NOT EXISTS Contact_info(
	name TEXT NOT NULL,
	phone_number TEXT NOT NULL,
	email TEXT NOT NULL,
	supplier_id INTEGER NOT NULL,
	PRIMARY KEY (name, phone_number, email)
	FOREIGN KEY (supplier_id)
		REFERENCES Supplier (id)
);

--Suppliers.Supplier contract
CREATE TABLE IF NOT EXISTS Contract(
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	contract_info TEXT NOT NULL,
	supplier_id INTEGER NOT NULL,
	UNIQUE(supplier_id),
	FOREIGN KEY (supplier_id)
		REFERENCES Supplier(id)
);

CREATE TABLE IF NOT EXISTS Product_in_contract(
	contract_id INTEGER NOT NULL,
	catalog_number TEXT NOT NULL,
	barcode INTEGER NOT NULL,
	original_price DOUBLE NOT NULL,
	PRIMARY KEY (catalog_number, contract_id),
	FOREIGN KEY (barcode)
		REFERENCES Product(barcode)
	FOREIGN KEY (contract_id)
		REFERENCES Contract(id)
);

CREATE TABLE IF NOT EXISTS Discount_of_product_in_contract(
	amount INTEGER NOT NULL,
	discount DOUBLE NOT NULL,
	catalog_number TEXT NOT NULL,
	contract_id INTEGER NOT NULL,
	PRIMARY KEY (amount, discount, catalog_number, contract_id),
	FOREIGN KEY (catalog_number, contract_id)
		REFERENCES Product_in_contract(catalog_number, contract_id),
	CONSTRAINT discount_constraint 
		CHECK(discount > 0 AND discount < 1)
);

--Product
CREATE TABLE IF NOT EXISTS Product(
	barcode INTEGER NOT NULL,
	name TEXT NOT NULL,
	manufacture TEXT NOT NULL,
	categoty VARCHAR(32),
	subCategoty VARCHAR(32),
	size VARCHAR(12),
	freqSupply INTEGER,
	minPrice DOUBLE,
	PRIMARY KEY (barcode)
	--CHECK (barcode > -1)
);

--Order
CREATE TABLE IF NOT EXISTS Supplier_order(
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	shop_number INTEGER NOT NULL,
	status INTEGER NOT NULL,
	delivery_day TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS Periodical_supplier_order(
	id INTEGER NOT NULL,
	weekp INTEGER NOT NULL,
	
	PRIMARY KEY (id)
	FOREIGN KEY(id)
		REFERENCES Supplier_order(id)
	CHECK weekp > 0)
);

CREATE TABLE IF NOT EXISTS Periodical_supplier_order_days(
	order_id INTEGER NOT NULL,
	delivery_weekly_day INTEGER NOT NULL,
	
	PRIMARY KEY (order_id, delivery_weekly_day)
	FOREIGN KEY (order_id)
		REFERENCES Supplier_order(id)
	CHECK (delivery_weekly_day > 0 AND delivery_weekly_day < 8)
);

--TODO consider to remove it
CREATE TABLE IF NOT EXISTS Regular_supplier_order(
	id INTEGER NOT NULL,
	
	PRIMARY KEY (id)
	FOREIGN KEY(id)
		REFERENCES Supplier_order(id)
);

CREATE TABLE IF NOT EXISTS Product_in_order(
	order_id INTEGER NOT NULL,
	contract_id INTEGER NOT NULL,
	catalog_number TEXT NOT NULL,
	amount INTEGER NOT NULL,
	PRIMARY KEY (order_id, catalog_number)
	FOREIGN KEY (order_id)
		REFERENCES Supplier_order(id)
	FOREIGN KEY (catalog_number, contract_id)
		REFERENCES Product_in_contract(catalog_number, contract_id)
	CONSTRAINT amount_in_order
		CHECK (amount > 0)
);